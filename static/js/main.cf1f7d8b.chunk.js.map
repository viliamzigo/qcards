{"version":3,"sources":["database sync /^/.*/.json$","actions/index.js","components/Header/index.js","components/Filter/index.js","containers/FilterContainer.js","components/Question/index.js","containers/QuestionContainer.js","components/Footer/index.js","components/About/index.js","containers/App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CategoryFilters","EFM","EN","Header","Navbar","bg","variant","Container","Brand","href","onClick","props","resetState","Toggle","aria-controls","Collapse","Nav","className","Link","Component","connect","dispatch","type","Filter","categoryFilters","loadQuestions","getQuestion","Row","Col","Card","body","Title","Text","ListGroup","category","index","Item","action","state","activeFilter","questions","key","filter","Question","content","buttons","question","useState","showAnswer","toggleAnswer","answer","Button","fluid","active","Footer","year","Date","getFullYear","About","target","rel","App","this","FilterContainer","QuestionContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","require","q","answered","console","error","unanweredQuestions","length","randomIndex","Math","floor","random","find","store","createStore","rootReducer","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.cf1f7d8b.chunk.js","sourcesContent":["var map = {\n\t\"./EFM.json\": 70,\n\t\"./EN.json\": 71\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 69;","export const loadQuestions = filter => ({\r\n    type: 'LOAD_QUESTIONS',\r\n    filter\r\n})\r\n\r\nexport const getQuestion = () => ({\r\n    type: 'GET_RANDOM_QUESTION'\r\n})\r\n\r\nexport const resetState = () => ({\r\n    type: 'RESET_STATE'\r\n})\r\n\r\nexport const CategoryFilters = {\r\n    EFM: 'EFM',\r\n    EN: 'EN'\r\n}\r\n","import Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { resetState } from '../../actions'\r\n\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\" onClick={() => this.props.resetState()}>Qcards</Navbar.Brand>    \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#\" onClick={() => this.props.resetState()}>Domov</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  resetState: () => dispatch(resetState())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Header)","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Filter({ categoryFilters, loadQuestions, getQuestion }) {\r\n\r\n  const selectCategory = key => {\r\n    loadQuestions(key)\r\n    getQuestion()\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row  className=\"justify-content-center\">\r\n        <Col className=\"w-75\">\r\n          <Card body>\r\n            <Card.Title>Výber kategórie otázok</Card.Title>\r\n            <Card.Text>\r\n              Zvoľte kategóriu.\r\n            </Card.Text>\r\n            <ListGroup>\r\n            {categoryFilters.map((category, index) => (  \r\n              <ListGroup.Item action onClick={() => selectCategory(category)} key={index}>\r\n                {category}\r\n              </ListGroup.Item>\r\n            ))}\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  categoryFilters: PropTypes.array.isRequired,\r\n  loadQuestions: PropTypes.func.isRequired,\r\n  getQuestion: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;","import { connect } from 'react-redux'\r\nimport Filter from '../components/Filter'\r\nimport { CategoryFilters, loadQuestions, getQuestion } from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  categoryFilters: Object.keys(CategoryFilters),\r\n  activeFilter: state.questions.category\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadQuestions: key => dispatch(loadQuestions(key)),\r\n  getQuestion: () => dispatch(getQuestion()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter)\r\n","import { useState } from 'react';\r\nimport './Question.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nfunction Question({ question, getQuestion, resetState }) {\r\n  const [showAnswer, toggleAnswer] = useState(false);\r\n\r\n  const nextQuestion = () => {\r\n    toggleAnswer(false)\r\n    getQuestion()\r\n  }\r\n\r\n  if (question ===  null) {\r\n    return(<div/>);\r\n  }\r\n\r\n  let content, buttons;\r\n  if (question === 'OUT_OF_QUESTIONS') {\r\n    content = <Card.Title className=\"m-3\">OUT_OF_QUESTIONS</Card.Title>\r\n    buttons = <div />\r\n  } else {\r\n    content = <div className=\"question\">\r\n      <Card.Title className=\"m-3\">{question.question}</Card.Title>\r\n      {showAnswer && <Card.Text>{question.answer}</Card.Text>}\r\n    </div>\r\n    buttons = <div>\r\n      {!showAnswer && <Button variant=\"warning\" onClick={() => toggleAnswer(true)}>Zobraziť odpoveď</Button>}\r\n      {showAnswer && <Button variant=\"success\" onClick={() => nextQuestion()}>Ďalšia otázka</Button>}\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"w-75\">\r\n          <Card body className=\"text-center\">\r\n            <Container fluid>\r\n              <Row>\r\n                <Col>\r\n                  {content}\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"d-flex justify-content-end m-3\">\r\n                <Col>\r\n                  {buttons}\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"m-3\">\r\n                <Col><Button variant=\"secondary\" onClick={() => resetState()}>Späť na výber kategórie</Button></Col>\r\n              </Row>\r\n            </Container>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Question;","import { connect } from 'react-redux'\r\nimport Question from '../components/Question'\r\nimport { getQuestion, resetState } from '../actions'\r\n\r\nconst mapStateToProps = state => ({\r\n  question: state.questions.active\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getQuestion: () => dispatch(getQuestion()),\r\n  resetState: () => dispatch(resetState())\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Question)\r\n","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './index.css';\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n    <div className=\"footer\">\r\n      <Container>\r\n        <Row>\r\n          <Col>© Copyright {year}</Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction About() {\r\n  return (\r\n    <Container>\r\n      <Row  className=\"justify-content-center\">\r\n        <Col className=\"w-75\">\r\n          <Card body>\r\n            <Card.Title>Informácie</Card.Title>\r\n            <Card.Text>\r\n              Táto aplikácia je voľnočasovým projektom študentov pre zefektívnenie učenia rôznych oblastí, hlavne jazykov a ako výpomoc pri štúdiu EFM na fakultu matematiky, fyziky a informatiky Univerzity Komenského. Vaše návrhy, či pripomienky môžete zadávať cez <a href=\"https://github.com/viliamzigo/qcards/issues\" target=\"_blank\" rel=\"noreferrer\">github issues</a>.\r\n            </Card.Text>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;","import './App.css';\nimport { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Header from \"../components/Header\"\nimport FilterContainer from \"./FilterContainer\"\nimport QuestionContainer from \"./QuestionContainer\"\nimport Footer from \"../components/Footer\"\nimport About from \"../components/About\"\n\n\nexport class App extends Component {\n  render() {\n    const { activeFilter } = this.props\n    let content;\n    if (activeFilter === null) {\n      content = <div><FilterContainer /><About /></div>;\n    } else {\n      content = <QuestionContainer />;\n    }\n    return (\n      <div className=\"App\"> \n        <Header />\n        <div className=\"content\">\n          {content}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeFilter: state.questions.category\n})\n\nexport default connect(mapStateToProps)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\n\r\nconst questions = (state = { questions: [], active: null, category: null }, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_QUESTIONS':\r\n            try {\r\n                const state = require(`../database/${action.filter}.json`)\r\n                return { ...state, category: action.filter, questions: state.map(q => ({ ...q, answered: false }))}\r\n            } catch (e) {\r\n                console.error(e)\r\n                return state\r\n            }\r\n        case 'GET_RANDOM_QUESTION':\r\n            const unanweredQuestions = state.questions.filter(q => !q.answered)\r\n            if (unanweredQuestions.length === 0) {\r\n                return { ...state, active: \"OUT_OF_QUESTIONS\"}\r\n            }\r\n            const randomIndex = Math.floor(Math.random()*unanweredQuestions.length)\r\n            state.questions.find(q => q.question === unanweredQuestions[randomIndex].question).answered = true\r\n            return { ...state, active: unanweredQuestions[randomIndex] }\r\n        case 'RESET_STATE':\r\n            return { questions: [], active: null, category: null };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    questions\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport rootReducer from './reducers';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\nconst store = createStore(rootReducer)\n\nconst render = () => ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nrender()\nstore.subscribe(render)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}